<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Uno Game Room</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.5/dist/css/bootstrap.min.css" rel="stylesheet" />
  <link rel="stylesheet" href="/css/gameroom.css" />
  <style>
    body {
      background: radial-gradient(circle, #ff0000 0%, #000000 100%);
      color: white;
      font-family: 'Poppins', sans-serif;
      height: 100vh;
      overflow: hidden;
    }
    .player-zone {
      position: absolute;
      display: flex;
      align-items: center;
      overflow: visible;
    }
    .player-top { top: 10px; left: 50%; transform: translateX(-50%); flex-direction: row; }
    .player-bottom { bottom: 10px; left: 50%; transform: translateX(-50%); flex-direction: row; }
    .player-left { top: 50%; left: 10px; transform: translateY(-50%) rotate(-90deg); transform-origin: left center; flex-direction: row; }
    .player-right { top: 50%; right: 10px; transform: translateY(-50%) rotate(90deg); transform-origin: right center; flex-direction: row; }
    .card-back {
      width: 60px;
      margin-left: -40px;
      z-index: 1;
    }
    .card-back:hover {
      z-index: 1000;
      transform: translateY(-10px);
    }
    .uno-card {
      width: 60px;
      height: auto;
      margin: 2px;
    }
    #draw-pile, #discard-pile {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    }
    #discard-pile { left: 60%; }
    .turn-indicator {
      text-align: center;
      margin-top: 1rem;
    }
    #chat-sidebar {
      transition: right 0.3s ease;
      right: 0;
    }
    #chat-sidebar.d-none {
      right: -300px;
    }
  </style>
</head>
<body>
  <a href="/lobby" class="btn btn-outline-light position-absolute top-0 start-0 m-3">‚Üê Lobby</a>
  <button id="toggle-chat" class="btn btn-outline-light position-absolute top-0 end-0 m-3">üí¨ Chat</button>

  <div class="position-absolute top-50 start-50 translate-middle text-center" style="margin-top: -150px; z-index: 10;">
    <% if (isMyTurn) { %>
      <h4 class="text-success">‚úÖ Your Turn!</h4>
    <% } else { %>
      <h4 class="text-warning">‚è≥ Waiting for your turn...</h4>
    <% } %>
  </div>

  <% if (user && game && user.id === game.creator_id) { %>
    <div class="position-absolute bottom-0 start-0 m-3 d-flex flex-column align-items-start">
      <% if (game.status === 'waiting') { %>
        <form action="/games/<%= gameId %>/start" method="POST">
          <button class="btn btn-success mb-2">Start Game</button>
        </form>
      <% } %>
      <form action="/games/<%= gameId %>/delete" method="POST" onsubmit="return confirm('Are you sure you want to delete this game?');">
        <button class="btn btn-danger">Delete Game</button>
      </form>

      <form action="/games/<%= gameId %>/reset" method="POST" onsubmit="return confirm('Are you sure you want to reset this game?');">
        <button class="btn btn-warning">Reset Game</button>
      </form>

    </div>
  <% } %>

  <% players.forEach(player => { %>
    <% if (player.user_id === user.id) { %>
      <div class="player-zone player-bottom">
        <p><strong><%= player.name %> (You)</strong></p>
        <% playerHand.forEach(card => { 
          const fileColor = card.color.charAt(0).toUpperCase() + card.color.slice(1).toLowerCase();
          const fileValue = card.value.replace(' ', '_'); // e.g. Draw 2 ‚Üí Draw_2
     %>
       <img 
         src="/images/cards/<%= fileColor %>_<%= fileValue %>.jpg"
         class="uno-card"
         data-card-id="<%= card.id %>"
         onclick="playCard('<%= card.id %>')" 
       />
     <% }) %>
     
      </div>
    <% } else if (player.seat_number === 2) { %>
      <div class="player-zone player-top">
        <p><strong><%= player.name %></strong></p>
        <% for (let i = 0; i < 7; i++) { %>
          <img src="/images/cards/UNOBack.jpg" class="card-back" />
        <% } %>
      </div>
    <% } else if (player.seat_number === 3) { %>
      <div class="player-zone player-left">
        <p><strong><%= player.name %></strong></p>
        <% for (let i = 0; i < 7; i++) { %>
          <img src="/images/cards/UNOBack.jpg" class="card-back" />
        <% } %>
      </div>
    <% } else if (player.seat_number === 4) { %>
      <div class="player-zone player-right">
        <p><strong><%= player.name %></strong></p>
        <% for (let i = 0; i < 7; i++) { %>
          <img src="/images/cards/UNOBack.jpg" class="card-back" />
        <% } %>
      </div>
    <% } %>
  <% }) %>
  <% if (playerHand.length === 0) { %>
    <p class="text-danger">You have no cards in your hand!</p>
  <% } %>

  <div id="draw-pile" onclick="drawCard()">
    <img src="/images/cards/UNOBack.jpg" class="card-back" alt="Draw Pile">
  </div>
  

  <div id="discard-pile">
    <% if (topCard) { %>
      <img src="/images/cards/<%= topCard.color %>_<%= topCard.value %>.jpg" class="uno-card" alt="Top Card">
    <% } %>
  </div>

  <!-- Chat Sidebar -->
  <div id="chat-sidebar" class="position-absolute end-0 top-0 h-100 bg-dark p-3 text-white" style="width: 300px; z-index: 9999; overflow-y: auto;">
    <h5>Chat</h5>
    <div id="chat-box" style="height: 75vh; overflow-y: scroll; border: 1px solid #ccc; padding: 0.5rem; background-color: #111;"></div>
    <form id="chat-form" class="mt-3">
      <input type="text" id="chat-input" class="form-control" placeholder="Type a message..." autocomplete="off" required />
      <button type="submit" class="btn btn-primary mt-2 w-100">Send</button>
    </form>
  </div>

  <script>
    function playCard(cardId) {
      socket.emit("play-card", {
        roomId: "<%= gameId %>",
        playerId: "<%= user.id %>",
        cardId: cardId
      });
    }
  
    socket.on("card-played", ({ card, playerId }) => {
      const discardPile = document.getElementById("discard-pile");
      discardPile.innerHTML = `<img src="/images/cards/${card.color}_${card.value}.jpg" class="uno-card" alt="Top Card">`;
  
      if (playerId === "<%= user.id %>") {
        // Optionally refresh the player's hand
        location.reload(); // Simple way to reflect new hand state
      }
    });
  </script>

<script>
  function drawCard() {
    socket.emit("draw-card", {
      roomId: "<%= gameId %>",
      playerId: "<%= user.id %>"
    });
  }

  socket.on("card-drawn", ({ card }) => {
    // Option 1: Reload page to refresh hand
    location.reload();

    // Option 2 (advanced): Dynamically append new card image:
    /*
    const myZone = document.querySelector(".player-bottom");
    const img = document.createElement("img");
    img.src = `/images/cards/${card.color}_${card.value}.jpg`;
    img.className = "uno-card";
    img.setAttribute("onclick", `playCard(${card.id})`);
    myZone.appendChild(img);
    */
  });

  socket.on("draw-error", ({ error }) => {
    alert("Error drawing card: " + error);
  });
</script>



  <!-- Socket.io for Chat -->
  <script src="/socket.io/socket.io.js"></script>
  <script>
    const socket = io();
    const roomId = "<%= gameId %>";
    const playerName = "<%= playerName %>";

    socket.emit("join-room", roomId);

    const chatForm = document.getElementById("chat-form");
    const chatInput = document.getElementById("chat-input");
    const chatBox = document.getElementById("chat-box");

    chatForm.addEventListener("submit", (e) => {
      e.preventDefault();
      const message = chatInput.value.trim();
      if (message) {
        socket.emit("chat-message", { roomId, message, sender: playerName });
        chatInput.value = "";
      }
    });

    socket.on("chat-message", ({ sender, message, timestamp }) => {
      const time = new Date(timestamp).toLocaleTimeString();
      const msg = document.createElement("div");
      msg.innerHTML = `<strong>${sender}</strong> <small>${time}</small><br/>${message}`;
      msg.classList.add("mb-2");
      chatBox.appendChild(msg);
      chatBox.scrollTop = chatBox.scrollHeight;
    });

    const chatSidebar = document.getElementById("chat-sidebar");
const toggleChatButton = document.getElementById("toggle-chat");

toggleChatButton.addEventListener("click", () => {
  chatSidebar.classList.toggle("d-none");

  toggleChatButton.textContent = chatSidebar.classList.contains("collapsed")
    ? "üí¨ Chat"
    : "‚ùå Close Chat";
});

  </script>
</body>
</html>
